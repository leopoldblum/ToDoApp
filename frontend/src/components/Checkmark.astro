---
const { todoEntry } = Astro.props;
const todoID = todoEntry.id;
---

<button id={`todoButton_${todoID}`} class="todoButtons" data-todoID={todoID}>
    iD: {todoID} is {JSON.stringify(todoEntry.fulfilled)}
</button>

<style>
    .todoButtons {
        padding: 25% 25%;
        background-color: grey;
    }

    .todoButtons:hover {
        background-color: pink;
    }
</style>

<script>
    async function toggleFulfillmentTodo(todoID: string) {
        console.log("test with ID:" + todoID);
        const getDataResponse = await fetch(
            "http://localhost:8080/todo/" + todoID,
        );
        const myData = await getDataResponse.json();

        myData.title = "fuck this " + todoID;
        myData.fulfilled = !myData.fulfilled;
        //maybe stringify?

        const response = await fetch(
            "http://localhost:8080/updateTodo/" + todoID,
            {
                method: "POST",
                body: JSON.stringify(myData), // string or object
                headers: {
                    "Content-Type": "application/json",
                },
            },
        );
        const myJson = await response.json(); //extract JSON from the http response
        // do something with myJson

        console.log("did it update id=" + todoID + "? \n");
    }

    const allButtons = document.getElementsByClassName("todoButtons");

    //console.log("todoButtons size = " + allButtons.length);

    for (let i = 0; i < allButtons.length; i++) {
        let currButton = allButtons[i];
        let currButtonID = currButton.getAttribute("data-todoID");

        // check if buttonID is null
        if (currButtonID === null) {
            currButtonID = "";
            console.error("Error: todoID is Null!");
        }

        currButton.addEventListener("click", () =>
            toggleFulfillmentTodo(currButtonID),
        );
    }
</script>
