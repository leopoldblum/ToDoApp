---
const { todoEntry } = Astro.props;
const todoID = todoEntry.id;
---

<button id={`todoButton_${todoID}`} class="todoButtons" data-todoID={todoID}>
    <!-- iD: {todoID} is {JSON.stringify(todoEntry.fulfilled)} -->
    <img class="btnImg" src="box1.svg" />
</button>

<style>
    .btnImg {
        width: 100%;
    }

    .todoButtons {
        padding: 25% 25%;
        margin: 5%;
        background-color: grey;
    }

    .todoButtons:hover {
        background-color: rgb(60, 219, 55);
    }
</style>

<script>
    async function toggleFulfillmentTodo(todoID: string | null) {
        if (todoID === null)
            throw new Error("todoID is null, cant update fulfillment!");

        const getDataResponse = await fetch(
            "http://localhost:8080/todo/" + todoID,
        );
        const myData = await getDataResponse.json();

        myData.fulfilled = !myData.fulfilled;

        try {
            const updateResponse = await fetch(
                "http://localhost:8080/updateTodo/" + todoID,
                {
                    method: "POST",
                    body: JSON.stringify(myData),
                    headers: {
                        "Content-Type": "application/json",
                    },
                },
            );

            if (!updateResponse.ok) {
                throw new Error(
                    "Error - Response Status:" + updateResponse.status,
                );
            }

            console.log(
                "fulfillment - updateResponse: " + updateResponse.status,
            );

            // LOL, reactivity ig
            location.reload();
        } catch (error) {
            console.error(error);
        }
    }

    const allButtons = document.getElementsByClassName("todoButtons");

    for (let currButton of allButtons) {
        currButton.addEventListener("click", () =>
            toggleFulfillmentTodo(currButton.getAttribute("data-todoID")),
        );
    }
</script>
